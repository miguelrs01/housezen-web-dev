{"mappings":"ACEA,IAAM,WAAa,cACb,YAAc,CAClB,IACA,cACA,eACA,YACA,iBACD,CAED,KAAK,gBAAgB,CAAC,UAAW,AAAC,IAChC,EAAM,SAAS,CACb,OAAO,IAAI,CAAC,YACT,IAAI,CAAC,AAAC,GACE,EAAM,MAAM,CAAC,cAG5B,GAEA,KAAK,gBAAgB,CAAC,QAAS,AAAC,IAC9B,EAAM,WAAW,CACf,OAAO,KAAK,CAAC,EAAM,OAAO,EACvB,IAAI,CAAC,AAAC,GAEL,AAAI,GAGG,MAAM,EAAM,OAAO,GAGlC,GAEA,KAAK,gBAAgB,CAAC,WAAY,AAAC,IACjC,IAAM,EAAiB,CAAC,WAAW,CACnC,EAAM,SAAS,CACb,OAAO,IAAI,GAAG,IAAI,CAAC,AAAC,GACX,QAAQ,GAAG,CAChB,EAAW,GAAG,CAAC,AAAC,IACd,GAAI,AAAsC,KAAtC,EAAe,OAAO,CAAC,GACzB,OAAO,OAAO,MAAM,CAAC,EAEzB,KAIR","sources":["<anon>","public/sw.js"],"sourcesContent":["// Service Worker básico para houseZen\nconst CACHE_NAME = 'houseZen-v1';\nconst urlsToCache = [\n    '/',\n    '/index.html',\n    '/favicon.svg',\n    '/user.svg',\n    '/manifest.json'\n];\nself.addEventListener('install', (event)=>{\n    event.waitUntil(caches.open(CACHE_NAME).then((cache)=>{\n        return cache.addAll(urlsToCache);\n    }));\n});\nself.addEventListener('fetch', (event)=>{\n    event.respondWith(caches.match(event.request).then((response)=>{\n        // Cache hit - return response\n        if (response) return response;\n        return fetch(event.request);\n    }));\n});\nself.addEventListener('activate', (event)=>{\n    const cacheWhitelist = [\n        CACHE_NAME\n    ];\n    event.waitUntil(caches.keys().then((cacheNames)=>{\n        return Promise.all(cacheNames.map((cacheName)=>{\n            if (cacheWhitelist.indexOf(cacheName) === -1) return caches.delete(cacheName);\n        }));\n    }));\n});\n\n//# sourceMappingURL=sw.js.map\n","// Service Worker básico para houseZen\n\nconst CACHE_NAME = 'houseZen-v1';\nconst urlsToCache = [\n  '/',\n  '/index.html',\n  '/favicon.svg',\n  '/user.svg',\n  '/manifest.json'\n];\n\nself.addEventListener('install', (event) => {\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then((cache) => {\n        return cache.addAll(urlsToCache);\n      })\n  );\n});\n\nself.addEventListener('fetch', (event) => {\n  event.respondWith(\n    caches.match(event.request)\n      .then((response) => {\n        // Cache hit - return response\n        if (response) {\n          return response;\n        }\n        return fetch(event.request);\n      })\n  );\n});\n\nself.addEventListener('activate', (event) => {\n  const cacheWhitelist = [CACHE_NAME];\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames.map((cacheName) => {\n          if (cacheWhitelist.indexOf(cacheName) === -1) {\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    })\n  );\n});"],"names":["CACHE_NAME","urlsToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","respondWith","match","request","response","fetch","cacheWhitelist","keys","cacheNames","Promise","all","map","cacheName","indexOf","delete"],"version":3,"file":"sw.js.map"}